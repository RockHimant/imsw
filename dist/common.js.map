{"version":3,"sources":["./node_modules/file-saver/dist/FileSaver.min.js","./src/app/shared/services/product.service.ts","./src/app/views/chat/chat.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getProducts() {\r\n    return this.http.get('api/products');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, Subject, of, combineLatest } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nexport interface Chat {\r\n  text: string;\r\n  time: Date | string;\r\n  contactId: User['id'];\r\n}\r\n\r\nexport interface ChatCollection {\r\n  id: string;\r\n  chats: Chat[];\r\n}\r\n\r\nexport interface UserChatInfo {\r\n  chatId: ChatCollection['id'];\r\n  contactId: User['id'];\r\n  contactName: User['name'];\r\n  unread: number;\r\n  lastChatTime: Date | string;\r\n}\r\n\r\nexport class User {\r\n  id: string;\r\n  avatar: string;\r\n  name: string;\r\n  status: string;\r\n  chatInfo?: UserChatInfo[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n  public contacts: User[];\r\n  public chats: ChatCollection[];\r\n  public user: User;\r\n\r\n  onContactSelected = new BehaviorSubject<any>(null);\r\n  onUserUpdated = new Subject<User>();\r\n\r\n  onChatSelected = new BehaviorSubject<any>(null);\r\n  onChatsUpdated = new Subject<any>();\r\n  loadingCollection: boolean;\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  loadChatData(): Observable<any> {\r\n    return combineLatest(\r\n      this.getAllContacts(),\r\n      this.getAllChats(),\r\n      this.getCurrentUser(),\r\n      (contacts, chats, user) => {\r\n        this.contacts = contacts;\r\n        this.chats = chats;\r\n        this.user = user;\r\n        // console.log('next.willCall')\r\n        this.onUserUpdated.next(user);\r\n        // console.log('next.called')\r\n        // console.log(\r\n        //   \"contacts:\",\r\n        //   contacts,\r\n        //   \"\\n chats:\",\r\n        //   chats,\r\n        //   \"\\n currUser:\",\r\n        //   user\r\n        // );\r\n      }\r\n    );\r\n  }\r\n  public getChatByContact(contactId): Observable<ChatCollection> {\r\n    this.loadingCollection = true;\r\n    const chatInfo = this.user.chatInfo.find(chat => chat.contactId === contactId);\r\n\r\n    if (!chatInfo) {\r\n      return this.createChatCollection(contactId)\r\n        .pipe(switchMap(chatColl => {\r\n          return this.getChatByContact(contactId);\r\n        }));\r\n    }\r\n\r\n    return this.getAllChats()\r\n      .pipe(switchMap(chats => {\r\n        const chatCollection = chats.find(chat => chat.id === chatInfo.chatId);\r\n        const contact = this.contacts.find(\r\n          contact => contact.id === contactId\r\n        );\r\n\r\n        this.onChatSelected.next({\r\n          chatCollection: chatCollection,\r\n          contact: contact\r\n        });\r\n        this.loadingCollection = false;\r\n        return of(chatCollection);\r\n      }));\r\n  }\r\n\r\n  createChatCollection(contactId) {\r\n\r\n    const contact = this.contacts.find(contact => contact.id === contactId);\r\n    const chatId = (Math.random() * 1000000000).toString();\r\n\r\n    const chatCollection: ChatCollection = {\r\n      id: chatId,\r\n      chats: []\r\n    };\r\n\r\n    const chatInfo = {\r\n      chatId: chatId,\r\n      lastChatTime: new Date(),\r\n      contactId: contact.id,\r\n      contactName: contact.name,\r\n      unread: null\r\n    };\r\n\r\n    return this.http\r\n      .post('api/chat-collections', {...chatCollection})\r\n      .pipe(switchMap(updatedChatCollection => {\r\n\r\n        this.user.chatInfo.push(chatInfo);\r\n        return this.updateUser(this.user)\r\n          .pipe(switchMap((res) => {\r\n\r\n            return this.getCurrentUser()\r\n              .pipe(map(user => {\r\n                this.user = user;\r\n                // console.log(user)\r\n                this.onUserUpdated.next(user);\r\n              }));\r\n\r\n            // return updatedChatCollection\r\n          }));\r\n\r\n      }));\r\n  }\r\n\r\n  getAllContacts(): Observable<User[]> {\r\n    return this.http.get<User[]>('api/contacts');\r\n  }\r\n  getAllChats(): Observable<ChatCollection[]> {\r\n    return this.http.get<ChatCollection[]>('api/chat-collections');\r\n  }\r\n  getCurrentUser(): Observable<User> {\r\n    return this.http.get<User>('api/chat-user')\r\n      .pipe(map(res => res[0]));\r\n  }\r\n  updateUser(user: User): Observable<User> {\r\n    return this.http.put<User>(`api/chat-user/${user.id}`, {...user});\r\n  }\r\n  updateChats(chatId: string, chats: Chat[]): Observable<ChatCollection> {\r\n    const chatCollection: ChatCollection = {\r\n      id: chatId,\r\n      chats: chats\r\n    };\r\n    return this.http.put<ChatCollection>('api/chat-collections', chatCollection);\r\n  }\r\n\r\n  autoReply(chat) {\r\n    setTimeout(() => {\r\n      this.onChatsUpdated.next(chat);\r\n    }, 1500);\r\n  }\r\n\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}