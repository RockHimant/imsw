{"version":3,"sources":["./src/app/views/chat/chat-contents/chat-contents.component.ts","./src/app/views/chat/chat-contents/chat-contents.component.html","./src/app/views/chat/chat-left-sidebar/chat-left-sidebar.component.ts","./src/app/views/chat/chat-left-sidebar/chat-left-sidebar.component.html","./src/app/views/chat/chat-routing.module.ts","./src/app/views/chat/chat.module.ts","./src/app/views/chat/chat/chat.component.ts","./src/app/views/chat/chat/chat.component.html"],"names":[],"mappings":"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","file":"views-chat-chat-module.js","sourcesContent":["import { Component, OnInit, ViewChild, ViewChildren, Input, OnDestroy } from '@angular/core';\r\nimport { PerfectScrollbarDirective } from 'ngx-perfect-scrollbar';\r\nimport { ChatService, ChatCollection, User, Chat } from '../chat.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { SharedAnimations } from 'src/app/shared/animations/shared-animations';\r\n\r\n@Component({\r\n  selector: 'app-chat-contents',\r\n  templateUrl: './chat-contents.component.html',\r\n  styleUrls: ['./chat-contents.component.scss'],\r\n  animations: [SharedAnimations]\r\n})\r\nexport class ChatContentsComponent implements OnInit, OnDestroy {\r\n  user: User = new User();\r\n  activeContact: User = new User();\r\n  public chatCollection: ChatCollection;\r\n\r\n  userUpdateSub: Subscription;\r\n  chatUpdateSub: Subscription;\r\n  chatSelectSub: Subscription;\r\n\r\n  @Input('matSidenav') matSidenav;\r\n  @ViewChild(PerfectScrollbarDirective) psContainer: PerfectScrollbarDirective;\r\n\r\n  @ViewChildren('msgInput') msgInput;\r\n  @ViewChild('msgForm') msgForm: NgForm;\r\n\r\n  constructor(public chatService: ChatService) {}\r\n\r\n  ngOnInit() {\r\n    // Listen for user update\r\n    this.userUpdateSub = this.chatService.onUserUpdated.subscribe(user => {\r\n      console.log(user);\r\n      this.user = user;\r\n    });\r\n\r\n    // Listen for contact change\r\n    this.chatSelectSub = this.chatService.onChatSelected.subscribe(res => {\r\n      if (res) {\r\n        this.chatCollection = res.chatCollection;\r\n        this.activeContact = res.contact;\r\n        this.initMsgForm();\r\n      }\r\n    });\r\n\r\n    // Listen for chat update\r\n    this.chatUpdateSub = this.chatService.onChatsUpdated.subscribe(chat => {\r\n      this.chatCollection.chats.push(chat);\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.userUpdateSub ) { this.userUpdateSub.unsubscribe(); }\r\n    if ( this.chatSelectSub ) { this.chatSelectSub.unsubscribe(); }\r\n    if ( this.chatUpdateSub ) { this.chatUpdateSub.unsubscribe(); }\r\n  }\r\n\r\n  sendMessage(e) {\r\n    const chat: Chat = {\r\n      contactId: this.chatService.user.id,\r\n      text: this.msgForm.form.value.message,\r\n      time: new Date().toISOString()\r\n    };\r\n\r\n    this.chatCollection.chats.push(chat);\r\n    this.chatService\r\n      .updateChats(this.chatCollection.id, [...this.chatCollection.chats])\r\n      .subscribe(res => {\r\n        this.initMsgForm();\r\n      });\r\n\r\n    // Only for demo purpose\r\n    this.chatService.autoReply({\r\n      contactId: this.activeContact.id,\r\n      text: `Hi, I\\'m ${this.activeContact.name}. Your imaginary friend.`,\r\n      time: new Date().toISOString()\r\n    });\r\n\r\n  }\r\n\r\n  initMsgForm() {\r\n    setTimeout(() => {\r\n      this.msgForm.reset();\r\n      this.msgInput.first.nativeElement.focus();\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  scrollToBottom() {\r\n    setTimeout(() => {\r\n      this.psContainer.update();\r\n      this.psContainer.scrollToBottom(0, 400);\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"d-flex pl-3 pr-3 pt-2 pb-2 o-hidden box-shadow-1 chat-topbar\">\r\n      <a appSidebarToggler=\"chat-sidebar\" class=\"link-icon d-md-none\">\r\n        <i class=\"icon-regular i-Right ml-0 mr-3\"></i> \r\n      </a>\r\n      <div class=\"d-flex align-items-center\" *ngIf=\"activeContact?.id\">\r\n      <img [src]=\"activeContact?.avatar\" \r\n      [alt]=\"activeContact?.name\" \r\n      class=\"avatar-sm rounded-circle mr-2\">\r\n      <p class=\"m-0 text-title text-16 flex-grow-1\">{{activeContact?.name}}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div [perfectScrollbar]=\"{suppressScrollX: true}\" class=\"chat-content rtl-ps-none\" *ngIf=\"!chatService.loadingCollection && chatCollection\">\r\n    <div *ngFor=\"let chat of chatCollection?.chats\" class=\"mb-4\">\r\n\r\n      <div *ngIf=\"chat.contactId !== activeContact.id\" class=\"d-flex user\">\r\n        <img [src]=\"user?.avatar\" [alt]=\"user?.name\" class=\"avatar-sm rounded-circle mr-3\">\r\n        <div class=\"message flex-grow-1\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"mb-1 text-title text-16 flex-grow-1\">{{user?.name}}</p>\r\n            <span class=\"text-small text-muted\">{{chat.time | date}}</span>\r\n          </div>\r\n          <p class=\"m-0\">{{chat.text}}</p>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"chat.contactId === activeContact.id\" class=\"d-flex\">\r\n        <div class=\"message flex-grow-1\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"mb-1 text-title text-16 flex-grow-1\">{{activeContact?.name}}</p>\r\n              <span class=\"text-small text-muted\">{{chat.time | date}}</span>\r\n            </div>\r\n          <p class=\"m-0\">{{chat.text}}</p>\r\n        </div>\r\n        <img [src]=\"activeContact?.avatar\" \r\n        [alt]=\"activeContact?.name\" \r\n        class=\"avatar-sm rounded-circle ml-3\">\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"pl-3 pr-3 pt-3 pb-3 box-shadow-1 chat-input-area\" \r\n  *ngIf=\"chatCollection && !chatService.loadingCollection\">\r\n    <form #msgForm=\"ngForm\" \r\n    class=\"inputForm\" \r\n    (ngSubmit)=\"sendMessage($event)\" \r\n    (keyup.enter)=\"sendMessage($event)\">\r\n      <div class=\"form-group\">\r\n        <textarea class=\"form-control form-control-rounded\" #msgInput\r\n        ngModel\r\n        placeholder=\"Type your message\"\r\n        name=\"message\" id=\"message\" cols=\"30\" rows=\"3\"></textarea>\r\n      </div>\r\n      <div class=\"d-flex\">\r\n        <div class=\"flex-grow-1\"></div>\r\n        <button class=\"btn btn-icon btn-rounded btn-primary mr-2\">\r\n          <i class=\"i-Paper-Plane\"></i>\r\n        </button>\r\n        <button class=\"btn btn-icon btn-rounded btn-outline-primary\" type=\"button\">\r\n          <i class=\"i-Add-File\"></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"spinner-glow spinner-glow-warning\" \r\n  *ngIf=\"chatService.loadingCollection\"></div>\r\n\r\n  <div class=\"app-inro-circle\" *ngIf=\"!chatCollection && !chatService.loadingCollection\">\r\n    <div class=\"border rounded-circle big-bubble\"  [@animate]=\"{value:'*',params:{scale:'.2',delay:'400ms', duration: '400ms'}}\">\r\n      <i class=\"i-Speach-Bubbles\"></i>\r\n    </div>\r\n    <p class=\"text-16\" [@animate]=\"{value:'*',params:{y:'120px',delay:'600ms', duration: '400ms'}}\">Select a contact and start chat.</p>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { User, ChatService } from '../chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-left-sidebar',\r\n  templateUrl: './chat-left-sidebar.component.html',\r\n  styleUrls: ['./chat-left-sidebar.component.scss']\r\n})\r\nexport class ChatLeftSidebarComponent implements OnInit {\r\n\r\n  userUpdateSub: Subscription;\r\n  loadDataSub: Subscription;\r\n\r\n  isSidenavOpen = true;\r\n\r\n  currentUser: User = new User();\r\n  contacts: any[];\r\n\r\n  constructor(private chatService: ChatService) {}\r\n\r\n  ngOnInit() {\r\n    // this.chatService.onChatsUpdated\r\n    //   .subscribe(updatedChats => {\r\n    //     this.chats = updatedChats;\r\n    //   });\r\n\r\n    this.userUpdateSub = this.chatService.onUserUpdated\r\n      .subscribe(updatedUser => {\r\n        this.currentUser = updatedUser;\r\n      });\r\n\r\n    this.loadDataSub = this.chatService.loadChatData()\r\n      .subscribe(res => {\r\n        this.currentUser = this.chatService.user;\r\n        // this.chats = this.chatService.chats;\r\n        this.contacts = this.chatService.contacts;\r\n      });\r\n  }\r\n  ngOnDestroy() {\r\n    if ( this.userUpdateSub ) { this.userUpdateSub.unsubscribe(); }\r\n    if ( this.loadDataSub ) { this.loadDataSub.unsubscribe(); }\r\n  }\r\n\r\n  getChatByContact(contactId) {\r\n    this.chatService.getChatByContact(contactId)\r\n      .subscribe(res => {\r\n        console.log('from sub', res);\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n","<div class=\"border-right\">\r\n  <div class=\"pt-2 pb-2 pl-3 pr-3 d-flex align-items-center o-hidden box-shadow-1 chat-topbar\">\r\n    <a appSidebarToggler=\"chat-sidebar\" class=\"link-icon d-md-none\">\r\n      <i class=\"icon-regular ml-0 mr-3 i-Left\"></i> \r\n    </a>\r\n    <div class=\"form-group m-0 flex-grow-1\">\r\n      <input type=\"text\" class=\"form-control form-control-rounded\" id=\"search\" placeholder=\"Search contacts\">\r\n    </div>\r\n    \r\n  </div>\r\n  \r\n  <div [perfectScrollbar]=\"{suppressScrollX: true}\" class=\"contacts-scrollable rtl-ps-none\">\r\n    <div class=\"mt-4 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">Recent</div>\r\n    <div *ngFor=\"let info of currentUser?.chatInfo; let i = index\" \r\n    class=\"p-3 d-flex align-items-center contact\"\r\n    [ngClass]=\"{\r\n      'border-bottom': i != currentUser?.chatInfo.length - 1, \r\n      'online': (contacts | getValueByKey:info.contactId:'status') === 'online'\r\n    }\"\r\n    (click)=\"getChatByContact(info.contactId)\">\r\n        <img [src]=\"contacts | getValueByKey:info.contactId:'avatar'\" \r\n        class=\"avatar-sm rounded-circle mr-3\" alt=\"\">\r\n        <div>\r\n            <h6 class=\"m-0\">{{info.contactName}}</h6>\r\n            <span class=\"text-muted text-small\">{{info.lastChatTime  | date}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"mt-3 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">Contacts</div>\r\n    <div *ngFor=\"let contact of contacts\" \r\n    class=\"p-3 d-flex border-bottom align-items-center contact\"\r\n    [ngClass]=\"{online: contact.status === 'online'}\"\r\n    (click)=\"getChatByContact(contact.id)\">\r\n      <img [src]=\"contact.avatar\" alt=\"\" class=\"avatar-sm rounded-circle mr-3\">\r\n      <h6 class=\"\">{{contact.name}}</h6>\r\n    </div>\r\n  </div>\r\n  \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatComponent } from './chat/chat.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChatComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChatRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChatRoutingModule } from './chat-routing.module';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ChatLeftSidebarComponent } from './chat-left-sidebar/chat-left-sidebar.component';\r\nimport { ChatContentsComponent } from './chat-contents/chat-contents.component';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedDirectivesModule } from 'src/app/shared/directives/shared-directives.module';\r\nimport { SharedPipesModule } from 'src/app/shared/pipes/shared-pipes.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedDirectivesModule,\r\n    SharedPipesModule,\r\n    FormsModule,\r\n    PerfectScrollbarModule,\r\n    ChatRoutingModule\r\n  ],\r\n  declarations: [ChatComponent, ChatLeftSidebarComponent, ChatContentsComponent]\r\n})\r\nexport class ChatModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div appSidebarContainer class=\"card chat-sidebar-container\">\r\n  <div appSidebarContent class=\"chat-content-wrap\">\r\n    <app-chat-contents></app-chat-contents>\r\n  </div>\r\n  <div appSidebar=\"chat-sidebar\" class=\"chat-sidebar-wrap\">\r\n    <app-chat-left-sidebar></app-chat-left-sidebar>\r\n  </div>\r\n</div>"],"sourceRoot":"webpack:///"}